# define samples from data directory using wildcards
SAMPLES, = glob_wildcards("../../data/trimmed_fastq_small/{sample}_1.trim.sub.fastq")

# target OUTPUT files for the whole workflow
rule all:
    input:
        "../results/multiqc_report.html",
        expand("../results/sam/{sample}.sam", sample = SAMPLES)

# workflow
rule fastqc:
    input:
        R1 = "../../data/trimmed_fastq_small/{sample}_1.trim.sub.fastq",
        R2 = "../../data/trimmed_fastq_small/{sample}_2.trim.sub.fastq"
    output:
        html = ["../results/fastqc/{sample}_1.trim.sub_fastqc.html", "../results/fastqc/{sample}_2.trim.sub_fastqc.html"],
        zip = ["../results/fastqc/{sample}_1.trim.sub_fastqc.zip", "../results/fastqc/{sample}_2.trim.sub_fastqc.zip"]
    log:
        "logs/fastqc/{sample}.log"
    threads: 2
    envmodules:
        "FastQC/0.11.9"
    shell:
        "fastqc {input.R1} {input.R2} -o ../results/fastqc/ -t {threads} &> {log}"

rule multiqc:
    input:
        expand(["../results/fastqc/{sample}_1.trim.sub_fastqc.zip", "../results/fastqc/{sample}_2.trim.sub_fastqc.zip"], sample = SAMPLES)
    output:
        "../results/multiqc_report.html"
    log:
        "logs/multiqc/multiqc.log"
    envmodules:
        "MultiQC/1.9-gimkl-2020a-Python-3.8.2"
    shell:
        "multiqc {input} -o ../results/ &> {log}"
 
rule bwa_align:
    input:
        R1 = "../../data/trimmed_fastq_small/{sample}_1.trim.sub.fastq",
        R2 = "../../data/trimmed_fastq_small/{sample}_2.trim.sub.fastq",
        genome = "../../data/ref_genome/ecoli_rel606.fasta"
    output:
        SAM = "../results/sam/{sample}.sam"
    log: "logs/bwa/{sample}.bwa.log"
    threads: 2
    envmodules:
        "BWA/0.7.17-gimkl-2017a"
    shell: "bwa mem -t {threads} {input.genome} {input.R1} {input.R2} > {output} 2> {log}"